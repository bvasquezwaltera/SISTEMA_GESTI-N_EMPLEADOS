
package presentacion;

//importaciones para agregar el formato de hora


import dominio.Empleado;
import dominio.Asistencia;
import java.text.ParseException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import negocio.AsistenciaControl;
import java.text.SimpleDateFormat;
import java.sql.Time;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;

public class FrmAsistencia extends javax.swing.JInternalFrame {

    private final AsistenciaControl CONTROL;
    private Asistencia obj;
            
    public FrmAsistencia() {
        initComponents();
        configurarJSpinner(jsHoraEntrada);
        configurarJSpinner(jsHoraSalida);
        CONTROL = new AsistenciaControl();
        obj = new Asistencia();
        this.listar("");
        tabGeneral2.setEnabledAt(1, false);
        txtId.setVisible(false);
        this.cargarEmpleados();
    }
    
    private void listar(String texto) {
        tablaListado.setModel(this.CONTROL.listar(texto));
    }

    private void selectComboBoxItem(JComboBox<?> comboBox, Object value) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            if (comboBox.getItemAt(i).toString().equals(value.toString())) {
                comboBox.setSelectedIndex(i);
                return;
            }
        }
    }
    private void configurarJSpinner(javax.swing.JSpinner spinner) {
    // Obtener la hora actual
    Date horaActual = new Date();

    // Crear un modelo de SpinnerDateModel con la hora actual
    javax.swing.SpinnerDateModel model = new javax.swing.SpinnerDateModel(horaActual, null, null, java.util.Calendar.HOUR_OF_DAY);

    // Establecer el modelo en el spinner
    spinner.setModel(model);

    // Crear un editor de fecha con el formato de 24 horas (HH:mm)
    SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm");
    javax.swing.JSpinner.DateEditor editor = new javax.swing.JSpinner.DateEditor(spinner, dateFormat.toPattern());

    // Establecer el editor en el spinner
    spinner.setEditor(editor);
}

    // Otros métodos y variables aquí...

  
        

    private void cargarEmpleados() {
        DefaultComboBoxModel items = this.CONTROL.seleccionarEmpleados();
        cboNombreEmpleado.setModel(items);
    }

    private void limpiar() {
        txtId.setText("");
    }

    private void mensajeOK(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Sistema", JOptionPane.INFORMATION_MESSAGE);
    }

    private void mensajeAdvertencia(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Sistema", JOptionPane.WARNING_MESSAGE);
    }

    private void mensajeError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Sistema", JOptionPane.ERROR_MESSAGE);
    }

    private int mensajePregunta(String mensaje) {
        int resp = JOptionPane.showConfirmDialog(this, mensaje, "Sistema", JOptionPane.YES_NO_OPTION);
        return resp;
    }

    private void verListado() {
        tabGeneral2.setEnabledAt(0, true);
        tabGeneral2.setSelectedIndex(0);
        tabGeneral2.setEnabledAt(1, false);
    }

    private void verMantenimiento() {
        tabGeneral2.setEnabledAt(1, true);
        tabGeneral2.setSelectedIndex(1);
        tabGeneral2.setEnabledAt(0, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabGeneral2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtBusqueda2 = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListado = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtDescrip = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboNombreEmpleado = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jcFecha = new com.toedter.calendar.JCalendar();
        jLabel7 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jsHoraEntrada = new javax.swing.JSpinner();
        jsHoraSalida = new javax.swing.JSpinner();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tabGeneral2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Buscar");

        txtBusqueda2.setAutoscrolls(false);
        txtBusqueda2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusqueda2ActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tablaListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaListado);

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTotal.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblTotal))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addComponent(txtBusqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBusqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnNuevo)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabGeneral2.addTab("Listado", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(50767, 50767));
        jPanel4.setPreferredSize(new java.awt.Dimension(1000, 800));

        jLabel4.setText("Empleado");

        txtDescrip.setText("Hora de salida:");

        txtIdentificador.setText("ID:");

        jLabel5.setText("Hora de entrada:");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jcFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcFechaPropertyChange(evt);
            }
        });

        jLabel7.setText("Fecha ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar))))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(txtDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jsHoraSalida))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addComponent(jsHoraEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFecha))
                    .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(254, 254, 254))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdentificador)
                    .addComponent(jLabel7)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jsHoraEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDescrip)
                            .addComponent(jsHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(127, Short.MAX_VALUE))
        );

        tabGeneral2.addTab("Mantenimiento", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabGeneral2, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusqueda2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusqueda2ActionPerformed

    }//GEN-LAST:event_txtBusqueda2ActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.listar(txtBusqueda2.getText());
        //this.listar(txtBusqueda.getText(), false);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // habilitamos el tab de mantenimiento
        this.verMantenimiento();
        btnGuardar.setVisible(true);
        btnActualizar.setVisible(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       if (tablaListado.getSelectedRowCount() == 1) {
         // Obtener los valores de la fila seleccionada
         String id = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 0));
         String empleadoId = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 1));
         String empleadoNombre = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 2));
         String fecha = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 3));
         String horaEntrada = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 4));
         String horaSalida = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 5));

         // Cargar los valores en los campos del formulario
         txtId.setText(id);
         // Suponiendo que cboNombreEmpleado es un JComboBox
         //cboNombreEmpleado.setSelectedItem(empleadoNombre);
         txtFecha.setText(fecha);

         try {
             // Parsear la cadena horaEntrada a un objeto Date
             Date horaEntradaDate = new SimpleDateFormat("HH:mm").parse(horaEntrada);
             Date horaSalidaDate = new SimpleDateFormat("HH:mm").parse(horaSalida);
             // Establecer este objeto Date como el valor del JSpinner
             jsHoraEntrada.setValue(horaEntradaDate);
             jsHoraSalida.setValue(horaSalidaDate);
         } catch (ParseException ex) {
             // Manejar cualquier excepción de parseo aquí
             ex.printStackTrace();
         }

         // Establecer el valor de jsHoraSalida de manera similar
         // jsHoraSalida.setValue(...);

         //cboTipoDocumento.setSelectedItem(tipoDoc);
         selectComboBoxItem(cboNombreEmpleado, empleadoNombre);

         this.verMantenimiento();
         btnGuardar.setVisible(false);
         btnActualizar.setVisible(true);
     } else {
         // No se ha seleccionado ningún registro, mostrar un mensaje de advertencia
         mensajeAdvertencia("Seleccione el registro a editar.");
     }


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String resp;
        // Validar que el usuario ha seleccionado un registro
        if (tablaListado.getSelectedRowCount() == 1) {
            if (this.mensajePregunta("Desea eliminar el registro?") == 0) {
                String id = String.valueOf(tablaListado.getValueAt(tablaListado.getSelectedRow(), 0));
                resp = this.CONTROL.eliminar(Integer.parseInt(id));
                if (resp.equals("OK")) {
                    this.mensajeOK("Registro eliminado correctamente");
                    this.listar("");
                } else {
                    this.mensajeError(resp);
                }
            }
        } else {
            this.mensajeAdvertencia("Seleccione el registro a eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Cerrar el formulario de registro
        this.verListado();
        this.limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         String resp;
         Asistencia asistencia = new Asistencia();

         Date fecha = jcFecha.getDate();
         Date horaEntradaDate = (Date) jsHoraEntrada.getValue();
         Date horaSalidaDate = (Date) jsHoraSalida.getValue();

         // Convertir los Date de la hora de entrada y salida a LocalTime
         LocalTime horaEntrada = horaEntradaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
         LocalTime horaSalida = horaSalidaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
        
        Time horaEntradaSql = Time.valueOf(horaEntrada);
        Time horaSalidaSql = Time.valueOf(horaSalida);
        
        Empleado empleado = (Empleado) cboNombreEmpleado.getSelectedItem();

        if (fecha== null) {
            this.mensajeAdvertencia("Debes seleccionar una fecha de inicio");
            return;
        }
        if (horaEntrada == null) {
            this.mensajeAdvertencia("Debes seleccionar una fecha de fin");
            return;
        }
        if (horaSalida == null) {
            this.mensajeAdvertencia("Debes seleccionar una fecha de fin");
            return;
        }
        if (!horaSalida.isAfter(horaEntrada)) {
        this.mensajeAdvertencia("La hora de salida debe ser posterior a la hora de entrada");
        return;
        }
        if (empleado == null) {
            this.mensajeAdvertencia("Debes seleccionar un empleado");
            return;
        }

       
        asistencia.setFecha(fecha);
        asistencia.setHoraEntrada(horaEntradaSql);
        asistencia.setHoraSalida(horaSalidaSql);
        asistencia.setEmpleadoId(empleado.getId());
        asistencia.setEmpleadoNombre(empleado.getNombre());

        resp = this.CONTROL.insertar(asistencia);
        if (resp.equals("OK")) {
            this.mensajeOK("Registro insertado correctamente");
            this.verListado();
            this.listar("");
            this.limpiar();
        } else {
            this.mensajeError(resp);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String resp;
         Asistencia asistencia = new Asistencia();

         try {
             int id = Integer.parseInt(txtId.getText());
             Date fecha = jcFecha.getDate();
             Date horaEntradaDate = (Date) jsHoraEntrada.getValue();
             Date horaSalidaDate = (Date) jsHoraSalida.getValue();

             LocalTime horaEntrada = horaEntradaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
             LocalTime horaSalida = horaSalidaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();

             Time horaEntradaSql = Time.valueOf(horaEntrada);
             Time horaSalidaSql = Time.valueOf(horaSalida);

             Empleado empleado = (Empleado) cboNombreEmpleado.getSelectedItem();

             if (fecha == null) {
                 this.mensajeAdvertencia("Debes seleccionar una fecha");
                 return;
             }
             if (horaEntrada == null) {
                 this.mensajeAdvertencia("Debes seleccionar una hora de entrada");
                 return;
             }
             if (horaSalida == null) {
                 this.mensajeAdvertencia("Debes seleccionar una hora de salida");
                 return;
             }
             if (!horaSalida.isAfter(horaEntrada)) {
                 this.mensajeAdvertencia("La hora de salida debe ser posterior a la hora de entrada");
                 return;
             }
             if (empleado == null) {
                 this.mensajeAdvertencia("Debes seleccionar un empleado");
                 return;
             }

             asistencia.setId(id); // Asegúrate de tener un setter para el ID
             asistencia.setFecha(fecha);
             asistencia.setHoraEntrada(horaEntradaSql);
             asistencia.setHoraSalida(horaSalidaSql);
             asistencia.setEmpleadoId(empleado.getId());
             asistencia.setEmpleadoNombre(empleado.getNombre());

             resp = this.CONTROL.actualizar(asistencia);
             if (resp.equals("OK")) {
                 this.mensajeOK("Registro actualizado correctamente");
                 this.verListado();
                 this.listar("");
                 this.limpiar();
             } else {
                 this.mensajeError("Error en el formulario actualizar: " + resp);
             }
         } catch (NumberFormatException e) {
             this.mensajeError("Error al convertir el ID: " + e.getMessage());
         } catch (Exception e) {
             this.mensajeError("Error al actualizar los datos: " + e.getMessage());
         }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jcFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcFechaPropertyChange
        // TODO add your handling code here:
        if (evt.getOldValue() != null) {
            SimpleDateFormat ff = new SimpleDateFormat("yyyy/MM/dd");
            txtFecha.setText(ff.format(jcFecha.getCalendar().getTime()));
        }
    }//GEN-LAST:event_jcFechaPropertyChange

  

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboNombreEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JCalendar jcFecha;
    private javax.swing.JSpinner jsHoraEntrada;
    private javax.swing.JSpinner jsHoraSalida;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTabbedPane tabGeneral1;
    private javax.swing.JTabbedPane tabGeneral2;
    private javax.swing.JTable tablaListado;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtBusqueda1;
    private javax.swing.JTextField txtBusqueda2;
    private javax.swing.JLabel txtDescrip;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JLabel txtIdentificador;
    // End of variables declaration//GEN-END:variables
}
